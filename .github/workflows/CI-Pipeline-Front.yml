name: CI Front

on:
  push:
    branches:
      - dev
      - main
    paths:
      - 'TimeManager_front/**'
  pull_request:
    branches:
      - dev
      - main
    paths:
      - 'TimeManager_front/**'

jobs:
  build:
    name: Build Frontend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.18.0'

    - name: Install Dependencies
      working-directory: ./TimeManager_front
      run: npm install

    - name: Run Unit Tests
      working-directory: ./TimeManager_front
      run: npm run test:unit

    - name: Build Frontend
      working-directory: ./TimeManager_front
      run: npm run build

      # Main only
    - name: Deploy
      if: github.ref == 'refs/heads/main'  
      run: |
        DEPLOY_ID=$(curl -s -X POST \
          -H "Authorization: Bearer ${{ secrets.DEPLOY_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{}' \
          https://api.render.com/v1/services/srv-cs6igbrtq21c73dt5ot0/deploys | jq -r '.id')

          echo "Backend deployment triggered with ID: $DEPLOY_ID"
          echo "deploy_id=$DEPLOY_ID" >> $GITHUB_ENV

    - name: Deploy
      if: github.ref == 'refs/heads/main'  
      run: |
          for i in {1..90}; do
            DEPLOY_STATUS=$(curl -s \
              -H "Authorization: Bearer ${{ secrets.DEPLOY_API_KEY }}" \
              -H "Content-Type: application/json" \
              https://api.render.com/v1/services/srv-cs6igbrtq21c73dt5ot0/deploys/${{ env.deploy_id }} | jq -r '.status')

            echo "Current deploy status: $DEPLOY_STATUS"

            if [ "$DEPLOY_STATUS" == "live" ]; then
              echo "Deployment succeeded!"
              break
            elif [ "$DEPLOY_STATUS" == "build_failed" ]; then
              echo "Deployment build failed!"
              exit 1
            elif [ "$DEPLOY_STATUS" == "update_failed" ]; then
              echo "Deployment update failed!"
              exit 1
            elif [ "$DEPLOY_STATUS" == "canceled" ]; then
              echo "Deployment was canceled!"
              exit 1
            fi

           sleep 10
          done  
          
          if [ "$DEPLOY_STATUS" != "live" ]; then
            echo "Deployment timeout or unknown state!"
            exit 1
          fi

